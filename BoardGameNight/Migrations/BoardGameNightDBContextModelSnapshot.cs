// <auto-generated />
using System;
using BoardGameNight.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BoardGameNight.Migrations
{
    [DbContext(typeof(BoardGameNightDBContext))]
    partial class BoardGameNightDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BoardGameNight.Models.Event", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("Date")
                        .HasColumnType("date");

                    b.Property<int?>("SessionId")
                        .HasColumnType("int")
                        .HasColumnName("SessionID");

                    b.HasKey("Id");

                    b.HasIndex("SessionId");

                    b.ToTable("Event", (string)null);
                });

            modelBuilder.Entity("BoardGameNight.Models.OwnedGame", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ApigameId")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("APIGameID");

                    b.Property<int?>("Rating")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("OwnedGame", (string)null);
                });

            modelBuilder.Entity("BoardGameNight.Models.Preference", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Categories")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<double?>("MaxTime")
                        .HasColumnType("float");

                    b.Property<string>("Mechanics")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("OwnedId")
                        .HasColumnType("int")
                        .HasColumnName("OwnedID");

                    b.Property<string>("Publisher")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<int?>("YearPublished")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OwnedId");

                    b.HasIndex("UserId");

                    b.ToTable("Preferences");
                });

            modelBuilder.Entity("BoardGameNight.Models.Session", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("Enjoyment")
                        .HasColumnType("int");

                    b.Property<int?>("OwnedId")
                        .HasColumnType("int")
                        .HasColumnName("OwnedID");

                    b.Property<double?>("TimePlayed")
                        .HasColumnType("float");

                    b.Property<string>("Winner")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("OwnedId");

                    b.ToTable("Session", (string)null);
                });

            modelBuilder.Entity("BoardGameNight.Models.SessionAttendee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("SessionId")
                        .HasColumnType("int")
                        .HasColumnName("SessionID");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("Id");

                    b.HasIndex("SessionId");

                    b.HasIndex("UserId");

                    b.ToTable("SessionAttendee", (string)null);
                });

            modelBuilder.Entity("BoardGameNight.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("Age")
                        .HasColumnType("int");

                    b.Property<string>("LoginId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("LoginID");

                    b.Property<string>("Summary")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1000)");

                    b.HasKey("Id");

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("BoardGameNight.Models.UserStat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("TimesGamePlayed")
                        .HasColumnType("int");

                    b.Property<double?>("TotalTimePlayed")
                        .HasColumnType("float");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.Property<int?>("Wins")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserStats");
                });

            modelBuilder.Entity("BoardGameNight.Models.Event", b =>
                {
                    b.HasOne("BoardGameNight.Models.Session", "Session")
                        .WithMany("Events")
                        .HasForeignKey("SessionId")
                        .HasConstraintName("FK__Event__SessionID__74AE54BC");

                    b.Navigation("Session");
                });

            modelBuilder.Entity("BoardGameNight.Models.OwnedGame", b =>
                {
                    b.HasOne("BoardGameNight.Models.User", "User")
                        .WithMany("OwnedGames")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__OwnedGame__UserI__6754599E");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BoardGameNight.Models.Preference", b =>
                {
                    b.HasOne("BoardGameNight.Models.OwnedGame", "Owned")
                        .WithMany("Preferences")
                        .HasForeignKey("OwnedId")
                        .HasConstraintName("FK__Preferenc__Owned__6B24EA82");

                    b.HasOne("BoardGameNight.Models.User", "User")
                        .WithMany("Preferences")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__Preferenc__UserI__6A30C649");

                    b.Navigation("Owned");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BoardGameNight.Models.Session", b =>
                {
                    b.HasOne("BoardGameNight.Models.OwnedGame", "Owned")
                        .WithMany("Sessions")
                        .HasForeignKey("OwnedId")
                        .HasConstraintName("FK__Session__OwnedID__6E01572D");

                    b.Navigation("Owned");
                });

            modelBuilder.Entity("BoardGameNight.Models.SessionAttendee", b =>
                {
                    b.HasOne("BoardGameNight.Models.Session", "Session")
                        .WithMany("SessionAttendees")
                        .HasForeignKey("SessionId")
                        .HasConstraintName("FK__SessionAt__Sessi__70DDC3D8");

                    b.HasOne("BoardGameNight.Models.User", "User")
                        .WithMany("SessionAttendees")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__SessionAt__UserI__71D1E811");

                    b.Navigation("Session");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BoardGameNight.Models.UserStat", b =>
                {
                    b.HasOne("BoardGameNight.Models.User", "User")
                        .WithMany("UserStats")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__UserStats__UserI__6477ECF3");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BoardGameNight.Models.OwnedGame", b =>
                {
                    b.Navigation("Preferences");

                    b.Navigation("Sessions");
                });

            modelBuilder.Entity("BoardGameNight.Models.Session", b =>
                {
                    b.Navigation("Events");

                    b.Navigation("SessionAttendees");
                });

            modelBuilder.Entity("BoardGameNight.Models.User", b =>
                {
                    b.Navigation("OwnedGames");

                    b.Navigation("Preferences");

                    b.Navigation("SessionAttendees");

                    b.Navigation("UserStats");
                });
#pragma warning restore 612, 618
        }
    }
}
